prometheus:
  url: http://linkerd-prometheus.linkerd.svc

rules:
  default: false
  custom:
    - seriesQuery: 'response_latency_ms_bucket{namespace!="",pod!=""}'
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_bucket$
        as: "${1}_50th"
      metricsQuery: histogram_quantile(0.50, sum(rate(<<.Series>>{<<.LabelMatchers>>, direction="inbound"}[5m])) by (le, <<.GroupBy>>))

    - seriesQuery: 'response_latency_ms_bucket{namespace!="",pod!=""}'
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_bucket$
        as: "${1}_95th"
      metricsQuery: histogram_quantile(0.95, sum(rate(<<.Series>>{<<.LabelMatchers>>, direction="inbound"}[5m])) by (le, <<.GroupBy>>))

    - seriesQuery: 'response_latency_ms_bucket{namespace!="",pod!=""}'
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_bucket$
        as: "${1}_99th"
      metricsQuery: histogram_quantile(0.99, sum(rate(<<.Series>>{<<.LabelMatchers>>, direction="inbound"}[5m])) by (le, <<.GroupBy>>))

    - seriesQuery: 'request_total{namespace!="",pod!=""}'
      resources:
        template: <<.Resource>>
      name:
        matches: "^(.*)_total$"
        as: "${1}s_per_second"
      metricsQuery: |-
        sum(
          rate(
            <<.Series>>{
              <<.LabelMatchers>>,
              direction="inbound"
            }[5m]
          )
        ) by (
          <<.GroupBy>>
        )

  external:
    - seriesQuery: "rabbitmq_queue_messages_ready"
      resources:
        overrides:
          kubernetes_namespace: { resource: "namespace" }
          kubernetes_pod_name: { resource: "pod" }
      name:
        matches: "rabbitmq_queue_messages_ready"
        as: "rabbitmq_queue_messages_ready_hls"
      metricsQuery: 'avg_over_time(rabbitmq_queue_messages_ready{queue="hls"}[1m])'
                                
    - seriesQuery: "rabbitmq_queue_messages_ready"
      resources:
        overrides:
          kubernetes_namespace: { resource: "namespace" }
          kubernetes_pod_name: { resource: "pod" }
      name:
        matches: "rabbitmq_queue_messages_ready"
        as: "rabbitmq_queue_messages_ready_audio_analytics"
      metricsQuery: 'avg_over_time(rabbitmq_queue_messages_ready{queue="audio_analytics"}[1m])'
                               
    - seriesQuery: "rabbitmq_queue_messages_ready"
      resources:
        overrides:
          kubernetes_namespace: { resource: "namespace" }
          kubernetes_pod_name: { resource: "pod" }
      name:
        matches: "rabbitmq_queue_messages_ready"
        as: "rabbitmq_queue_messages_ready_object_detection"
      metricsQuery: 'avg_over_time(rabbitmq_queue_messages_ready{queue="object_detection"}[1m])'
                               
