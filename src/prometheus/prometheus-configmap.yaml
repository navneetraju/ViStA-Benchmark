apiVersion: v1
data:
  prometheus.yml: |-
    global:
      evaluation_interval: 10s
      scrape_interval: 10s
      scrape_timeout: 10s
      external_labels: 
        monitor: 'codelab-monitor'
    rule_files:
    - /etc/prometheus/*_rules.yml
    - /etc/prometheus/*_rules.yaml

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'grafana'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: ^grafana$

    - job_name: "rabbitmq_exporter"
      static_configs:
      - targets: ['rabbitmq-exporter-service.rabbits.svc.cluster.local:9419']

    - job_name: "mongodb_exporter"
      static_configs:
      - targets: ['mongodb-exporter-service.mongo.svc.cluster.local:9216']

    - job_name: "redis_exporter"
      static_configs:
      - targets: ['redis-metrics.redis.svc.cluster.local:9121']
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
        regex: (.*redis.*)

    #  Required for: https://grafana.com/grafana/dashboards/315
    - job_name: 'kubernetes-nodes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
      metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'
        action: keep
      - source_labels: [__name__]
        regex: 'container_memory_failures_total' # unneeded large metric
        action: drop

    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-service-mirror'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: linkerd-service-mirror;admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^linkerd-proxy;linkerd-admin;linkerd$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
      # Copy all pod labels to tmp labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: __tmp_pod_label_$1
      # Take `linkerd_io_` prefixed labels and copy them without the prefix
      - action: labelmap
        regex: __tmp_pod_label_linkerd_io_(.+)
        replacement:  __tmp_pod_label_$1
      # Drop the `linkerd_io_` originals
      - action: labeldrop
        regex: __tmp_pod_label_linkerd_io_(.+)
      # Copy tmp labels into real labels
      - action: labelmap
        regex: __tmp_pod_label_(.+)
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","data":{"prometheus.yml":"global:\n 
      evaluation_interval: 10s\n  scrape_interval: 10s\n  scrape_timeout: 10s\n 
      external_labels: \n    monitor: 'codelab-monitor'\nrule_files:\n-
      /etc/prometheus/*_rules.yml\n-
      /etc/prometheus/*_rules.yaml\n\nscrape_configs:\n- job_name:
      'prometheus'\n  static_configs:\n  - targets: ['localhost:9090']\n\n-
      job_name: 'grafana'\n  kubernetes_sd_configs:\n  - role: pod\n   
      namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  -
      source_labels:\n    - __meta_kubernetes_pod_container_name\n    action:
      keep\n    regex: ^grafana$\n\n- job_name: \"rabbitmq_exporter\"\n 
      static_configs:\n  - targets:
      ['rabbitmq-exporter-service.rabbits.svc.cluster.local:9419']\n\n-
      job_name: \"mongodb_exporter\"\n  static_configs:\n  - targets:
      ['mongodb-exporter-service.mongo.svc.cluster.local:9216']\n\n- job_name:
      \"redis_exporter\"\n  static_configs:\n  - targets:
      ['redis-exporter-service.redis.svc.cluster.local:9121']\n 
      relabel_configs:\n  - source_labels: [__meta_kubernetes_pod_name]\n   
      action: replace\n    target_label: instance\n    regex: (.*redis.*)\n\n# 
      Required for: https://grafana.com/grafana/dashboards/315\n- job_name:
      'kubernetes-nodes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file:
      /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n   
      insecure_skip_verify: true\n  bearer_token_file:
      /var/run/secrets/kubernetes.io/serviceaccount/token\n 
      kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action:
      labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label:
      __address__\n    replacement: kubernetes.default.svc:443\n  -
      source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n   
      target_label: __metrics_path__\n    replacement:
      /api/v1/nodes/$1/proxy/metrics/cadvisor\n  metric_relabel_configs:\n  -
      source_labels: [__name__]\n    regex:
      '(container|machine)_(cpu|memory|network|fs)_(.+)'\n    action: keep\n  -
      source_labels: [__name__]\n    regex: 'container_memory_failures_total' #
      unneeded large metric\n    action: drop\n\n- job_name:
      'linkerd-controller'\n  kubernetes_sd_configs:\n  - role: pod\n   
      namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  -
      source_labels:\n    -
      __meta_kubernetes_pod_label_linkerd_io_control_plane_component\n    -
      __meta_kubernetes_pod_container_port_name\n    action: keep\n    regex:
      (.*);admin-http$\n  - source_labels:
      [__meta_kubernetes_pod_container_name]\n    action: replace\n   
      target_label: component\n\n- job_name: 'linkerd-service-mirror'\n 
      kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  -
      source_labels:\n    -
      __meta_kubernetes_pod_label_linkerd_io_control_plane_component\n    -
      __meta_kubernetes_pod_container_port_name\n    action: keep\n    regex:
      linkerd-service-mirror;admin-http$\n  - source_labels:
      [__meta_kubernetes_pod_container_name]\n    action: replace\n   
      target_label: component\n\n- job_name: 'linkerd-proxy'\n 
      kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  -
      source_labels:\n    - __meta_kubernetes_pod_container_name\n    -
      __meta_kubernetes_pod_container_port_name\n    -
      __meta_kubernetes_pod_label_linkerd_io_control_plane_ns\n    action:
      keep\n    regex: ^linkerd-proxy;linkerd-admin;linkerd$\n  - source_labels:
      [__meta_kubernetes_namespace]\n    action: replace\n    target_label:
      namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action:
      replace\n    target_label: pod\n  # special case k8s' \"job\" label, to
      not interfere with prometheus' \"job\"\n  # label\n  #
      __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =\u003e\n  #
      k8s_job=foo\n  - source_labels:
      [__meta_kubernetes_pod_label_linkerd_io_proxy_job]\n    action:
      replace\n    target_label: k8s_job\n  # drop
      __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  - action:
      labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job\n 
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =\u003e\n  #
      deployment=foo\n  - action: labelmap\n    regex:
      __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # drop all labels
      that we just made copies of in the previous labelmap\n  - action:
      labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n 
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =\u003e\n  # foo=bar\n  -
      action: labelmap\n    regex:
      __meta_kubernetes_pod_label_linkerd_io_(.+)\n  # Copy all pod labels to
      tmp labels\n  - action: labelmap\n    regex:
      __meta_kubernetes_pod_label_(.+)\n    replacement: __tmp_pod_label_$1\n  #
      Take `linkerd_io_` prefixed labels and copy them without the prefix\n  -
      action: labelmap\n    regex: __tmp_pod_label_linkerd_io_(.+)\n   
      replacement:  __tmp_pod_label_$1\n  # Drop the `linkerd_io_` originals\n 
      - action: labeldrop\n    regex: __tmp_pod_label_linkerd_io_(.+)\n  # Copy
      tmp labels into real labels\n  - action: labelmap\n    regex:
      __tmp_pod_label_(.+)"},"kind":"ConfigMap","metadata":{"annotations":{"linkerd.io/created-by":"linkerd/cli
      stable-2.9.0"},"creationTimestamp":"2020-11-10T11:08:09Z","labels":{"linkerd.io/control-plane-component":"prometheus","linkerd.io/control-plane-ns":"linkerd"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:prometheus.yml":{}},"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{},"f:linkerd.io/created-by":{}},"f:labels":{".":{},"f:linkerd.io/control-plane-component":{},"f:linkerd.io/control-plane-ns":{}}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2020-11-12T11:14:17Z"}],"name":"linkerd-prometheus-config","namespace":"linkerd","resourceVersion":"530716","selfLink":"/api/v1/namespaces/linkerd/configmaps/linkerd-prometheus-config","uid":"8e7750ae-4392-4026-bf21-6f834b763fe4"}}
    linkerd.io/created-by: linkerd/cli stable-2.9.0
  creationTimestamp: '2020-11-10T11:08:09Z'
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:data': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
            'f:linkerd.io/created-by': {}
          'f:labels':
            .: {}
            'f:linkerd.io/control-plane-component': {}
            'f:linkerd.io/control-plane-ns': {}
      manager: kubectl-client-side-apply
      operation: Update
      time: '2020-11-12T12:02:55Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          'f:prometheus.yml': {}
      manager: kubectl-edit
      operation: Update
      time: '2020-11-30T13:58:06Z'
  name: linkerd-prometheus-config
  namespace: linkerd
  resourceVersion: '4004601'
  selfLink: /api/v1/namespaces/linkerd/configmaps/linkerd-prometheus-config
  uid: 8e7750ae-4392-4026-bf21-6f834b763fe4
